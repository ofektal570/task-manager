{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../tasks.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/list\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/expansion\";\n\nfunction TasksListComponent_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 6);\n    i0.ɵɵtext(1, \" Welcome! You don't have active tasks \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TasksListComponent_mat_list_option_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function TasksListComponent_mat_list_option_3_div_1_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const activeTask_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onClickDeleteActiveTask(activeTask_r3);\n    });\n    i0.ɵɵelementStart(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const activeTask_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", activeTask_r3.name, \" \");\n  }\n}\n\nfunction TasksListComponent_mat_list_option_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 10, 11);\n    i0.ɵɵlistener(\"submit\", function TasksListComponent_mat_list_option_3_div_2_Template_form_submit_1_listener() {\n      i0.ɵɵrestoreView(_r13);\n\n      const _r10 = i0.ɵɵreference(2);\n\n      const activeTask_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onClickFinishedEditActiveTask(activeTask_r3, _r10);\n    });\n    i0.ɵɵelementStart(3, \"mat-form-field\")(4, \"div\", 12);\n    i0.ɵɵelement(5, \"input\", 13);\n    i0.ɵɵelementStart(6, \"button\", 14);\n    i0.ɵɵtext(7, \"submit\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const activeTask_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", activeTask_r3.name);\n  }\n}\n\nfunction TasksListComponent_mat_list_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-option\", 7);\n    i0.ɵɵlistener(\"click\", function TasksListComponent_mat_list_option_3_Template_mat_list_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const activeTask_r3 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.onClickEditActiveTask(activeTask_r3);\n    });\n    i0.ɵɵtemplate(1, TasksListComponent_mat_list_option_3_div_1_Template, 5, 1, \"div\", 8);\n    i0.ɵɵtemplate(2, TasksListComponent_mat_list_option_3_div_2_Template, 8, 1, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const activeTask_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.editedTask !== activeTask_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.editedTask === activeTask_r3);\n  }\n}\n\nfunction TasksListComponent_mat_list_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-list-option\", 15);\n    i0.ɵɵlistener(\"click\", function TasksListComponent_mat_list_option_9_Template_mat_list_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const deletedTask_r17 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.onClickDeletedTask(deletedTask_r17);\n    });\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function TasksListComponent_mat_list_option_9_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const deletedTask_r17 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.onClickDeleteDeletedTask(deletedTask_r17);\n    });\n    i0.ɵɵelementStart(4, \"mat-icon\");\n    i0.ɵɵtext(5, \"delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const deletedTask_r17 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", deletedTask_r17.name, \" \");\n  }\n}\n\nexport let TasksListComponent = /*#__PURE__*/(() => {\n  class TasksListComponent {\n    constructor(tasksService) {\n      this.tasksService = tasksService;\n      this.activeTasks = [];\n      this.deletedTasks = [];\n      this.updatedActiveTaskListener = null;\n      this.updatedDeleteTaskListener = null;\n      this.editedTask = {\n        name: ''\n      };\n    }\n\n    ngOnInit() {\n      this.activeTasks = this.tasksService.getActiveTasks();\n      this.deletedTasks = this.tasksService.getDeletedTasks();\n      this.getActiveTasks();\n      this.getDeletedTasks();\n    }\n\n    getActiveTasks() {\n      this.updatedActiveTaskListener = this.tasksService.getActiveTasksUpdateListener().subscribe(activeTasksUpdated => {\n        this.activeTasks = activeTasksUpdated;\n      });\n    }\n\n    getDeletedTasks() {\n      this.updatedDeleteTaskListener = this.tasksService.getDeletedTasksUpdateListener().subscribe(deletedTasksUpdated => {\n        this.deletedTasks = deletedTasksUpdated;\n      });\n    }\n\n    onClickDeleteActiveTask(deleteTask) {\n      this.tasksService.deleteTask(deleteTask);\n    }\n\n    onClickEditActiveTask(editTask) {\n      this.editedTask = editTask;\n    }\n\n    onClickFinishedEditActiveTask(task, taskEditForm) {\n      this.tasksService.updateNameTask(task, taskEditForm.value.taskName);\n      this.editedTask = {\n        name: ''\n      };\n    }\n\n    onClickDeletedTask(deletedTassk) {\n      this.tasksService.activateTask(deletedTassk);\n    }\n\n    onClickDeleteDeletedTask(deletedTassk) {\n      this.tasksService.deleteTaskDeleted(deletedTassk);\n    }\n\n    ngOnDestroy() {\n      this.updatedActiveTaskListener.unsubscribe();\n      this.updatedDeleteTaskListener.unsubscribe();\n    }\n\n  }\n\n  TasksListComponent.ɵfac = function TasksListComponent_Factory(t) {\n    return new (t || TasksListComponent)(i0.ɵɵdirectiveInject(i1.TasksService));\n  };\n\n  TasksListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TasksListComponent,\n    selectors: [[\"app-tasks-list\"]],\n    decls: 10,\n    vars: 6,\n    consts: [[1, \"align-center\"], [\"class\", \"no-tasks\", 4, \"ngIf\"], [\"color\", \"primary\", 3, \"multiple\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"color\", \"accent\", 3, \"multiple\"], [\"class\", \"deleted-tasks\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"no-tasks\"], [3, \"click\"], [4, \"ngIf\"], [\"mat-mini-fab\", \"\", \"color\", \"accent\", 1, \"delete-button\", 3, \"click\"], [3, \"submit\"], [\"taskEditForm\", \"ngForm\"], [1, \"fieldwrapper\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"taskName\", \"ngModel\", \"\", 3, \"ngModel\"], [\"mat-raised-button\", \"\", \"color\", \"primary\"], [1, \"deleted-tasks\", 3, \"click\"]],\n    template: function TasksListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, TasksListComponent_p_1_Template, 2, 0, \"p\", 1);\n        i0.ɵɵelementStart(2, \"mat-selection-list\", 2);\n        i0.ɵɵtemplate(3, TasksListComponent_mat_list_option_3_Template, 3, 2, \"mat-list-option\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-expansion-panel\")(5, \"mat-expansion-panel-header\")(6, \"mat-panel-description\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"mat-selection-list\", 4);\n        i0.ɵɵtemplate(9, TasksListComponent_mat_list_option_9_Template, 6, 1, \"mat-list-option\", 5);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.activeTasks.length < 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"multiple\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.activeTasks);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" Deleted Tasks (\", ctx.deletedTasks.length, \")\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"multiple\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.deletedTasks);\n      }\n    },\n    directives: [i2.NgIf, i3.MatSelectionList, i2.NgForOf, i3.MatListOption, i4.MatButton, i5.MatIcon, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.NgForm, i7.MatFormField, i8.MatInput, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgModel, i9.MatExpansionPanel, i9.MatExpansionPanelHeader, i9.MatExpansionPanelDescription],\n    styles: [\".align-center[_ngcontent-%COMP%]{text-align:center}.no-tasks[_ngcontent-%COMP%]{margin-top:20px;font-size:large;padding:2%;border-style:dotted}.deleted-tasks[_ngcontent-%COMP%]{text-decoration:line-through}.delete-button[_ngcontent-%COMP%]{display:absolute;float:left;margin-bottom:.25%}.fieldwrapper[_ngcontent-%COMP%]{white-space:nowrap}.mat-icon[_ngcontent-%COMP%]{height:30px!important;width:20px!important;font-size:20px!important}.mat-mini-fab[_ngcontent-%COMP%]{height:35px!important;width:30px!important;font-size:30px!important}\"]\n  });\n  return TasksListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}